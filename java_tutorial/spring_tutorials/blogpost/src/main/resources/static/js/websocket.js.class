function ScreenCaster(config) {

  this.stompClient = null;
  this.mydata = [];


  this.init = function init() {

    this.initWebSocketConnection();

    //this.initDragAndDropSupport();

  };

  this.initWebSocketConnection = function initWebSocketConnection() {

    this.stompClient = Stomp.over(new SockJS("/stomp-endpoint"));
    this.stompClient.debug = null;
    var blogpost_id;
    this.stompClient.connect({}, function (frame) {
      console.log('Connected: ' + frame);
      this.stompClient.subscribe('/topic/greetings', function (greeting) {
                  var result = JSON.parse(greeting.body);
                  console.log("result " + result.length);
                  if(!blogpost_id && result.length > 0) {
                      console.log('test' + result[0][0]);
                      blogpost_id = result[0][0];
                  }
                  if(blogpost_id && result.length > 0) {
                      console.log('test 2' + result[0][0]);
                      blogpost_id = result[0][0];
                  }
                  if(blogpost_id){
                      this.stompClient.send("/app/history", {}, blogpost_id);
                  }
                  else {
                      this.stompClient.send("/app/history", {}, 0);
                  }

                  var secondPart = blogpost_id;

                  var newResult = []
                  for(var i = 1; i < result.length; i++) {
                      newResult.push(result[i]);
                  }
                  if(newResult.length > 0) {
                      filledData(newResult, blogpost_id);
                  }

              }.bind(this));

    }.bind(this));

  }.bind(this);


   function myDelete(e){
               var dataId = parseInt(e.getAttribute("data-id"));
               var newArr = this.mydata.filter(function(itm){
                 return itm[0] !== dataId;
               });
               $("#my_"+e.getAttribute("data-id")).remove();
               this.mydata = newArr;
               $(".helloMyTest-second").remove();
               filledData(this.mydata, 'test');
           }

  function filledData(data, score_mtd) {
    this.mydata = data;
    console.log("fillData lenght " + mydata.length);
    if (data) {
      var content = '';
      if(data.length >= 1) {
        var newTd = ""
        var fiveRows = 5;
        for (var i = 0; i < this.mydata.length; i++) {
          if (i % fiveRows === 0 && i > 0) {
              content += '</tr><tr class="helloMyTest-second">';
            }
          var r = this.mydata[i];
          newTd = '<td class="my-testing-one" style="width: 30px; padding-left: 10px;" id="my_'+ r[0] +'"><div class="my-delete" data-id="'+ r[0] +'">Delete</div>'
              + ' <table>'
              + '   <tr><td> '
              + '     <div><img id="'+ r[0] +'" style="float:left; width: 150px; height: 150px;"></div>'
              + '  </td></tr>'
              + '  <tr><td style="padding-top:10px;">'
              + '     <table class="first-table">'
                + '     <tr><td>ID</td><td>' + r[0] + '</td></tr>'
                + '     <tr><td>Date</td><td>' + r[1] + '</td></tr>'
                + '     <tr><td>Description</td><td>' + r[2] + '</td></tr>'
              + '     </table>'
              + ' </td></tr>'
              + '</table>'
              +  '</td>';
          content += newTd;
        }
        document.getElementsByClassName ("my-delete").addEventListener ("click", myDelete, false);
        content = '<tr class="helloMyTest-second">' + content + '</tr>';
        $('table.myrealtime-second tbody').after(content);
      }

    }
  }






}